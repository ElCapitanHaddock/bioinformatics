def FIND_PALINDROME(seq):
	rv = seq #reverse complementary
	rv = rv.replace("C", "Z")
	rv = rv.replace("G", "C")
	rv = rv.replace("Z", "G")
	rv = rv.replace("T", "Z")
	rv = rv.replace("A", "T")
	rv = rv.replace("Z", "A")
	#print seq[:1] + rv[1:] + seq[1:] + seq[:1]
	return rv == seq[::-1]

def SPLIT_PATTERN(str, pat):
	return str.split(pat)

print FIND_PALINDROME("GAATTC")

test = "CGTCTACACGCTGTTATAGCGAATCAGCGGGAACCCGGTGCCACGCGATGGAACGTCCTTAACTCTGGCAGGCAATTAAAGGGAACGTATATATAACGCAAAGAAGCTGGAAAATTGGCGAGAGAATCTTCTCTCTGTCTATCGAAGAATGGCCACGCGGTGGCAACCGTCATGCTAGCGTGCGGGGTACACTTGCTAACCATTTGGGACACGGGACACTCGCTGTTTTCGAAATTACCCTTTATGCGCGGGTATTGAACGTACCACGCTTATGCCCAGCATCGTTACAAGCAGACTCATACTAGATGTATTATGCCCGCCATGCAGACGAAACCAGTCGGAGATTACCGAGCATTCTATCACGTCGGCGACCACTAGTGAGCTACTGGAGCCGAGGGGTAACGTTGATGCCCCTAAGAACCTCTCGGTCGACGCAAGCGATTACACTCCTGTCACATCATAATCGTTTGCTATTCAGGGCTTGACCAACACTGGATTGCTTTT"
print SPLIT_PATTERN(test, "GTAC")
